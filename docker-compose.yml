version: '3.8'

services:
  database:
    image: postgres:15
    restart: always
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    networks:
      - tickame-network

  backend:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: tickame_backend
    restart: unless-stopped
    depends_on:
      - database
    ports:
      - "8000:8000"
    volumes:
      - .:/var/www/html
      - ./var:/var/www/html/var
    environment:
      - APP_ENV=dev
      - DATABASE_URL=postgresql://${POSTGRES_USER}:${POSTGRES_PASSWORD}@database:5432/${POSTGRES_DB}?serverVersion=16&charset=utf8
    networks:
      - tickame-network

  # Frontend Next.js
  frontend:
    build: ./ts-frontend
    container_name: tickame_frontend
    restart: unless-stopped
    ports:
      - "3000:3000"
    volumes:
      - ./ts-frontend:/app
      - /app/node_modules
    environment:
      - NEXT_PUBLIC_API_URL=http://localhost:8000/api
      - CHOKIDAR_USEPOLLING=true
    networks:
      - tickame-network

  redis:
    image: redis:7
    restart: always
    ports:
      - "6379:6379"
    networks:
      - tickame-network

  redisinsight:
    image: redis/redisinsight:latest
    container_name: redisinsight
    ports:
      - "5540:5540"
    networks:
      - tickame-network

volumes:
  postgres_data:

networks:
  tickame-network:
    driver: bridge